#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;

            // <---[[moderate duration]]

            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /*
        &trans  &trans  &trans  &trans  &trans  &trans                                   &trans  &trans  &trans  &trans  &trans  &trans 
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        &trans  &trans  &trans  &trans  &trans  &trans                                   &trans  &trans  &trans  &trans  &trans  &trans 
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                   &trans  &trans  &trans  &trans  &trans  &trans  &trans 
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans &trans  &trans  &trans  &trans  &trans  &trans  &trans 
// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                &trans  &trans  &trans  &trans  &trans    &trans &trans  &trans  &trans  &trans
*/

        default_layer {
            bindings = <
&kp ESC  &kp N1    &kp N2  &kp N3                          &kp N4  &kp N5                  &kp N6            &kp N7             &kp N8   &kp N9  &kp N0     &kp GRAVE
&kp TAB  &kp Q     &kp W   &kp E                           &kp R   &kp T                   &kp Y             &kp U              &kp I    &kp O   &kp P      &kp SLASH
&kp ESC  &kp BSPC  &kp A   &kp S                           &kp D   &kp F   &kp G                             &kp H              &kp J    &kp K   &kp L      &hm RCTRL S  &kp MINUS      &kp ESC
&mo 3    &kp Z     &kp X   &kp C                           &kp V   &kp B   &trans  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp N    &kp M   &kp COMMA  &kp PERIOD   &kp SEMICOLON  &kp EQUAL
         &kp LGUI  &mo 2   &hm LA(LC(LS(LEFT_GUI))) SPACE  &mo 4   &trans                  &trans            &mo 4              &kp RET  &mo 2   &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        SYMBOLS {
            bindings = <
&trans  &kp F1  &kp F2     &kp F3    &kp F4    &kp F5                      &kp F6  &kp F7  &kp F8      &kp F9    &kp F10   &trans
&trans  &kp N1  &kp N2     &kp N3    &kp N4    &kp N5                      &kp N6  &kp N7  &kp N8      &kp N9    &kp N0    &kp BACKSLASH
&trans  &trans  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHIFT  &trans                  &trans  &kp RSHIFT  &kp RGUI  &kp RALT  &kp RCTRL      &trans  &trans
&trans  &trans  &trans     &trans    &trans    &trans      &trans  &trans  &trans  &trans  &trans      &trans    &trans    &trans         &trans  &trans
        &trans  &trans     &trans    &trans    &trans                      &trans  &trans  &trans      &trans    &trans
            >;
        };

        NAVIGATION {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans           &trans             &trans        &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp HOME         &trans             &kp END       &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                  &kp K_SCROLL_UP  &kp LA(LEFT)       &kp UP_ARROW  &kp LA(RIGHT)  &kp PAGE_UP  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans           &kp K_SCROLL_DOWN  &kp LEFT      &kp DOWN       &kp RIGHT    &kp PAGE_DOWN  &trans
        &trans  &trans  &trans  &trans  &trans                  &trans  &trans           &trans             &trans        &trans
            >;
        };

        CONF {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            &trans        &trans        &trans        &trans        &trans                        &trans  &trans  &trans  &trans  &trans
            >;
        };

        MISSION {
            bindings = <
&trans  &kp LC(N1)  &kp LC(N2)  &kp LC(NUMBER_3)  &kp LC(N4)  &trans                      &trans  &trans  &trans  &trans        &trans        &trans
&trans  &kp LC(F2)  &kp LC(F3)  &trans            &trans      &kp LC(F8)                  &trans  &trans  &trans  &trans        &trans        &trans
&trans  &trans      &trans      &trans            &trans      &trans      &trans                  &trans  &trans  &kp RC(UP)    &trans        &trans         &trans  &trans
&trans  &trans      &trans      &trans            &trans      &trans      &trans  &trans  &trans  &trans  &trans  &kp RC(LEFT)  &kp RC(DOWN)  &kp RC(RIGHT)  &trans  &trans
        &trans      &trans      &trans            &trans      &trans                      &trans  &trans  &trans  &trans        &trans
            >;
        };
    };
};
